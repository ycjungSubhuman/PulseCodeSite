# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-25 06:43
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('upload', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12)),
                ('salutation', models.CharField(max_length=140)),
                ('picture', models.ImageField(upload_to='uploads/userimage')),
                ('post_num', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posting.Post')),
                ('body', models.TextField()),
                ('bgimage', models.ImageField(upload_to='uploads/bgimage/%Y/%m/%d/')),
                ('upload', models.ManyToManyField(to='upload.JournalUpload')),
            ],
            bases=('posting.post',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('creator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posting.Creator')),
            ],
            bases=('posting.creator',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('creator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posting.Creator')),
                ('member', models.ManyToManyField(to='posting.Member')),
            ],
            bases=('posting.creator',),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posting.Post')),
                ('audio', models.FileField(upload_to='uploads/tracks/converted/%Y/%m/%d/')),
                ('download', models.FileField(help_text='A track should be smaller than 10MiB', upload_to='uploads/tracks/raw/%Y/%m/%d/')),
                ('image', models.ImageField(help_text='Image should be smaller than 2MiB', upload_to='uploads/images/%Y/%m/%d')),
                ('description', models.CharField(max_length=140)),
                ('playtime', models.IntegerField()),
                ('datetime', models.DateTimeField(auto_now=True)),
            ],
            bases=('posting.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='posting.Creator'),
        ),
        migrations.AddField(
            model_name='post',
            name='tag',
            field=models.ManyToManyField(to='posting.Tag'),
        ),
        migrations.AddField(
            model_name='member',
            name='liked_post',
            field=models.ManyToManyField(related_name='liked_member', to='posting.Post'),
        ),
        migrations.AddField(
            model_name='member',
            name='scraped_post',
            field=models.ManyToManyField(related_name='scraped_post', to='posting.Post'),
        ),
        migrations.AddField(
            model_name='member',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
